{"ast":null,"code":"import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\nconst todosApi = createApi({\n  reducerPath: 'todos',\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'https://todo-list-backend-nvp1.onrender.com'\n  }),\n  tagTypes: ['Todo'],\n  endpoints(builder) {\n    return {\n      fetchTodos: builder.query({\n        query: () => {\n          return {\n            url: '/api/todos',\n            method: 'GET'\n          };\n        },\n        providesTags: result => result ? [...result.map(({\n          id\n        }) => ({\n          type: 'Todo',\n          id\n        })), {\n          type: 'Todo',\n          id: 'LIST'\n        }] : [{\n          type: 'Todo',\n          id: 'LIST'\n        }]\n      }),\n      addTodo: builder.mutation({\n        query: todo => {\n          return {\n            url: `/api/todos`,\n            method: 'POST',\n            body: todo\n          };\n        },\n        invalidatesTags: [{\n          type: 'Todo',\n          id: 'LIST'\n        }]\n      })\n    };\n  }\n});\nexport const {\n  useFetchTodosQuery,\n  useAddTodoMutation\n} = todosApi;\nexport default todosApi;","map":{"version":3,"names":["createApi","fetchBaseQuery","todosApi","reducerPath","baseQuery","baseUrl","tagTypes","endpoints","builder","fetchTodos","query","url","method","providesTags","result","map","id","type","addTodo","mutation","todo","body","invalidatesTags","useFetchTodosQuery","useAddTodoMutation"],"sources":["/Users/anbschool0021/Documents/Backend-frontend/frontend/src/store/apis/todosApi.js"],"sourcesContent":["import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\n\nconst todosApi = createApi({\n    reducerPath: 'todos',\n    baseQuery: fetchBaseQuery({\n        baseUrl: 'https://todo-list-backend-nvp1.onrender.com',\n    }),\n    tagTypes: ['Todo'],\n    endpoints(builder) {\n        return {\n            fetchTodos: builder.query({\n                query: () => {\n                    return {\n                        url: '/api/todos',\n                        method: 'GET',\n                    }\n                },\n                providesTags: (result) =>\n                    result\n                        ? [...result.map(({ id }) => ({ type: 'Todo', id })), { type: 'Todo', id: 'LIST' }]\n                        : [{ type: 'Todo', id: 'LIST' }],\n            }),\n            addTodo: builder.mutation({\n                query: (todo) => {\n                    return {\n                        url: `/api/todos`,\n                        method: 'POST',\n                        body: todo\n                    }\n                },\n                invalidatesTags: [{ type: 'Todo', id: 'LIST' }], \n                \n            })\n        }\n    }\n})\nexport const { useFetchTodosQuery, useAddTodoMutation } = todosApi\nexport default todosApi;"],"mappings":"AAAA,SAASA,SAAS,EAAEC,cAAc,QAAQ,8BAA8B;AAExE,MAAMC,QAAQ,GAAGF,SAAS,CAAC;EACvBG,WAAW,EAAE,OAAO;EACpBC,SAAS,EAAEH,cAAc,CAAC;IACtBI,OAAO,EAAE;EACb,CAAC,CAAC;EACFC,QAAQ,EAAE,CAAC,MAAM,CAAC;EAClBC,SAASA,CAACC,OAAO,EAAE;IACf,OAAO;MACHC,UAAU,EAAED,OAAO,CAACE,KAAK,CAAC;QACtBA,KAAK,EAAEA,CAAA,KAAM;UACT,OAAO;YACHC,GAAG,EAAE,YAAY;YACjBC,MAAM,EAAE;UACZ,CAAC;QACL,CAAC;QACDC,YAAY,EAAGC,MAAM,IACjBA,MAAM,GACA,CAAC,GAAGA,MAAM,CAACC,GAAG,CAAC,CAAC;UAAEC;QAAG,CAAC,MAAM;UAAEC,IAAI,EAAE,MAAM;UAAED;QAAG,CAAC,CAAC,CAAC,EAAE;UAAEC,IAAI,EAAE,MAAM;UAAED,EAAE,EAAE;QAAO,CAAC,CAAC,GACjF,CAAC;UAAEC,IAAI,EAAE,MAAM;UAAED,EAAE,EAAE;QAAO,CAAC;MAC3C,CAAC,CAAC;MACFE,OAAO,EAAEV,OAAO,CAACW,QAAQ,CAAC;QACtBT,KAAK,EAAGU,IAAI,IAAK;UACb,OAAO;YACHT,GAAG,EAAE,YAAY;YACjBC,MAAM,EAAE,MAAM;YACdS,IAAI,EAAED;UACV,CAAC;QACL,CAAC;QACDE,eAAe,EAAE,CAAC;UAAEL,IAAI,EAAE,MAAM;UAAED,EAAE,EAAE;QAAO,CAAC;MAElD,CAAC;IACL,CAAC;EACL;AACJ,CAAC,CAAC;AACF,OAAO,MAAM;EAAEO,kBAAkB;EAAEC;AAAmB,CAAC,GAAGtB,QAAQ;AAClE,eAAeA,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}